[package]
name = "efm32pg1b-hal"
version = "0.1.0"
authors = ["Bogdan Olar <olar.bogdan.dev@gmail.com>"]
edition = "2018"
description = "Hardware abstraction layer (HAL) for Silicon Labs EFM32PG1B microcontrollers"
keywords = ["embedded-hal", "efm32", "efm32pg1b", "hal", "silabs"]
categories = ["embedded", "hardware-support", "no-std"]
readme = "README.md"
license = "MIT/Apache-2.0"
repository = "https://github.com/BogdanOlar/efm32pg1b-hal"

[dependencies]
efm32pg1b-pac = { version = "0.2.5", features = [
    "critical-section",
    "rt",
    "defmt",
] }
embedded-hal = { version = "1" }
cortex-m = { version = "0.7.7", features = ["critical-section-single-core"] }
cortex-m-rt = "0.7.3"
panic-halt = "0.2.0"

defmt = { version = "0.3", optional = true }
defmt-rtt = { version = "0.4", optional = true }
panic-probe = { version = "0.3", features = ["print-defmt"] }
cortex-m-semihosting = "0.5.0"

[features]
## Implementation of `defmt::Format` for public enums and structures. See [defmt](https://crates.io/crates/defmt)
defmt = ["dep:defmt", "dep:defmt-rtt"]

[profile.release]
codegen-units = 1 # better optimizations
debug = true      # symbols are nice and they don't increase the size on Flash
lto = true        # better optimizations

[[example]]
name = "gpio"
required-features = ["defmt"]

[[example]]
name = "spi"
required-features = ["defmt"]

[dev-dependencies]
# Be able to print out types in `embedded-hal` when running the examples
embedded-hal = { version = "1", features = ["defmt-03"] }
